@{
    ViewData["Title"] = "Home Page";
    var carSdCardNumList = ViewBag.carSdCardNumList;
    
}

<head>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    @*<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@
    @*<script src="/lib/jquery-ui-1.13.2.custom/external/jquery/jquery.js"></script>*@

    @*<script src="~/lib/jquery-ui-1.13.2.custom/external/jquery/jquery.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js"></script>
    <script src="~/js/shine.js"></script>
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.structure.min.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.structure.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.theme.min.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.theme.css" rel="stylesheet" />
    <link href="~/lib/jquery-ui-1.13.2.custom/jquery-ui.css" rel="stylesheet" />
    <script src="~/lib/jquery-ui-1.13.2.custom/jquery-ui.min.js"></script>
    <script src="~/lib/jquery-ui-1.13.2.custom/jquery-ui.js"></script>


</head>

<div class="text-center">
    <h1 class="display-4">車輛ESG查詢系統</h1>
    <p>local version</p>
</div>

@*<form style="margin-left:10px;">*@
@*<h1 id=zxc>針對選取車輛調閱車輛J1939資料</h1>*@
<div class="form-group">
    <label>車輛(SD Card Number)</label>
    <select id="carSDCardNumSelect" name="carSDCardNumSelect">
        <option value="">請選擇車輛車載SD Card編號</option>
        @for (int i = 0; i < carSdCardNumList.Count; i++)
        {
            <option value="@carSdCardNumList[i].primaryValue_SdCardNum">@carSdCardNumList[i].SdCardNum</option>
        }
    </select><br>

    <label>車輛駕駛人</label>
    <select id="carDriverSelect" name="carDriverSelect">
        <option value="">請選擇車輛駕駛人</option>
    </select><br>

    <label>車輛啟動日期</label>
    <select id="carStartDateSelect" name="carStartDateSelect">
        <option value="">請選擇車輛啟動日期</option>
    </select><br>

    <label>車輛啟動區間</label>
<select id="carStartupSelect" name="carStartupSelect">
        <option value="">請選擇車輛啟動區間</option>
    </select>
</div>
<p>請選擇要檢視的資料類別 (複選) :</p>
<div style="padding-bottom: 2%;">
    <input type="checkbox" name="carDataType" id="o1" value="SPD">
    <label for="o1">Speed</label>

    <input type="checkbox" name="carDataType" id="o2" value="engineSpeed">
    <label for="o2">Engine Speed</label>
    <input type="checkbox" name="carDataType" id="o3" value="instantFuel">
    <label for="o3">Instant Fuel</label>
    <input type="checkbox" name="carDataType" id="o4" value="averageFuel">
    <label for="o4">Average Fuel</label>
    <input type="checkbox" name="carDataType" id="o5" value="ODO">
    <label for="o5">ODO</label>
    <input type="checkbox" name="carDataType" id="o6" value="idleHours">
    <label for="o6">Idle Hours</label>
    <input type="checkbox" name="carDataType" id="o7" value="idleFuel">
    <label for="o7">Idle Fuel</label>
</div>
<p>可輸入各資料類別要hight light的數值 :</p>
<div>
    <div style="float: left; margin-right: 1%">
        Speed<br />
        <input type="text" name="SPDOver" id="SPDOver" disabled="disabled" style="width: 50px;">
    </div>
    <div style="float: left; margin-right: 1%">
        Engine Speed<br />
        <input type="text" name="engineSpeedOver" id="engineSpeedOver" disabled="disabled" style="width: 100px;">
    </div>
    <div style="float: left; margin-right: 1%">
        Instant Fuel<br />
        <input type="text" name="instantFuelOver" id="instantFuelOver" disabled="disabled" style="width: 70px;">
    </div>
    <div style="float: left; margin-right: 1%">
        Average Fuel<br />
        <input type="text" name="averageFuelOver" id="averageFuelOver" disabled="disabled" style="width: 70px;">
    </div>
    <div style="float: left; margin-right: 1%">
        ODO<br />
        <input type="text" name="ODOOver" id="ODOOver" disabled="disabled" style="width: 60px;">
    </div>
    <div style="float: left; margin-right: 1%">
        Idle Hours<br />
        <input type="text" name="idleHoursOver" id="idleHoursOver" disabled="disabled" style="width: 60px;">
    </div>
    <div>
        Idle Fuel<br />
        <input type="text" name="idleFuelOver" id="idleFuelOver" disabled="disabled" style="width: 60px;">
    </div>
</div>
<div style="margin-top: 2%">
    <button type="submit" id="requestSubmit" class="btn btn-primary">確定</button>
    <button type="reset" id="clearSubmit" class="btn btn-warning">清除</button>
</div>
@*</form>*@

<div id="CO2Compute" style="box-sizing: border-box; border-width:4px; border-radius:10px; border-style:solid; border-color:#FFDA96; margin-top: 2%; padding: 2%;">
    <div>
        選擇車輛啟動區間以計算CO2
    </div>
    <p>
        <label for="amount">車輛啟動區間：</label><br>
        <div id="amount" style="border:0; color:#f6931f; font-weight:bold; width:calc(100% - 80px);"></div>
    </p>
    <div id="slider-range" style="width: 80%;">
    </div>
    <div id="CO2ComputeResultDiv" style="padding-top: 1%;">
        <div>
            CO2計算結果： 
        </div>
        <div id="timeOfCO2" style="border:0; color:#f6931f; font-weight:bold; width:calc(100% - 80px);"></div>
        <div id="mileageOfCO2" style="border:0; color:#f6931f; font-weight:bold; width:calc(100% - 80px);"></div>
        <div id="computeResultOfCO2" style="border:0; color:#f6931f; font-weight:bold; width:calc(100% - 80px);"></div>
    </div>
    <div style="padding-top: 1%;">
        <button type="submit" id="computeSubmit" class="btn btn-primary">確定</button>
    </div>
</div>

<div class="row" style="padding-top: 4%;">
    <div id="chartArea">

    </div>
</div>

<script>
    $(document).ready(function () {
        $("#CO2Compute").hide();
        $("#CO2ComputeResultDiv").hide();

        $("#o1").click(function () {
            if($("#SPDOver").attr("disabled"))
                $("#SPDOver").removeAttr("disabled");
            else
                $("#SPDOver").attr("disabled", "disabled");
        });
        $("#o2").click(function () {
            if($("#engineSpeedOver").attr("disabled"))
                $("#engineSpeedOver").removeAttr("disabled");
            else
                $("#engineSpeedOver").attr("disabled", "disabled");
        });
        $("#o3").click(function () {
            if($("#instantFuelOver").attr("disabled"))
                $("#instantFuelOver").removeAttr("disabled");
            else
                $("#instantFuelOver").attr("disabled", "disabled");
        });
        $("#o4").click(function () {
            if($("#averageFuelOver").attr("disabled"))
                $("#averageFuelOver").removeAttr("disabled");
            else
                $("#averageFuelOver").attr("disabled", "disabled");
        });
        $("#o5").click(function () {
            if($("#ODOOver").attr("disabled"))
                $("#ODOOver").removeAttr("disabled");
            else
                $("#ODOOver").attr("disabled", "disabled");
        });
        $("#o6").click(function () {
            if($("#idleHoursOver").attr("disabled"))
                $("#idleHoursOver").removeAttr("disabled");
            else
                $("#idleHoursOver").attr("disabled", "disabled");
        });
        $("#o7").click(function () {
            if ($("#idleFuelOver").attr("disabled"))
                $("#idleFuelOver").removeAttr("disabled");
            else
                $("#idleFuelOver").attr("disabled", "disabled");
        });
        //圖表

        function Series(type, xdata, seriesData) {
            this.typeName = type;
            this.xdata = xdata;
            this.seriesData = seriesData;
        }

        function Pieces(gt, lte, color){
            this.gt = gt-1;
            this.lte = lte-1;
            this.color = color;
        }

        function markArea(xAxis) {
            this.xAxis = xAxis;
        }

        function optionsDefinition(){
            var options = {
                title: {
                    text: '資料曲線: ',
                    x: 'center'
                },
                legend: {
                    data: [],
                    x: 'left'
                },
                xAxis: {
                    type: 'category'
                    //axisLabel:{
                    //    interval: 0,
                    //    rotate: -52
                    //}
                },
                yAxis: {
                    type: 'value',
                    max: 90,
                    min: -10
                    //boundaryGap: [0, '30%']
                },
                //grid: {
                //    show: true,
                //    borderColor: '#19507c',
                //    x: 50,
                //    x2: 50,
                //    y: 40
                //},
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross',
                        animation: false,
                        label: {
                            backgroundColor: '#505765'
                        }
                    }
                },
                dataZoom: [{
                    show: true,
                    realtime: true,
                    start: 0,
                    end: 20
                }, {
                    type: 'inside',
                    realtime: true,
                    start: 0,
                    end: 20
                }],
                visualMap: {
                    type: 'piecewise',
                    seriesIndex: 0,
                    show: false,
                    dimension: 0,
                    pieces: []
                },
                series: []
            }
            return options;
        }

        function setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected, carDataValueOver = null) {
            var xd = [], sd = [], ps = [], markAreaDataList = [];
            //var carDataValueOverList = { 'SPD': 115.0};
            var carDataValueOverKey, checkOver, checkOverNext, lineColor;
            var overXaxis;
            var lineColorList = { 'normal': '#c12e34', 'highlight': '#00EBEB' };
            var p;
            $.each(carDataJson,
                function (n, value) {
                    if (n == carDataJsonLength)
                        return false;
                    if (carDataValueOver) {
                        if (n == 0) {
                            carDataValueOverKey = 0;
                            overXaxis = value.DateTime;
                            if (value[carDataTypeSelected] > carDataValueOver)
                                checkOver = true;
                            else
                                checkOver = false;
                        } else {
                            if (value[carDataTypeSelected] > carDataValueOver)
                                checkOverNext = true;
                            else
                                checkOverNext = false;
                            if (checkOver != checkOverNext) {
                                if (checkOver){
                                    markAreaDataList.push([carDataValueOverKey-1, n-1]);
                                    lineColor = lineColorList['highlight'];
                                }
                                else
                                    lineColor = lineColorList['normal'];
                                p = new Pieces(carDataValueOverKey, n, lineColor);
                                ps.push(p);
                                carDataValueOverKey = n;
                                checkOver = checkOverNext;
                            } else if (n == carDataJsonLength - 1) {
                                if (checkOver){
                                    markAreaDataList.push([carDataValueOverKey-1, n-1]);
                                    lineColor = lineColorList['highlight'];
                                }
                                else
                                    lineColor = lineColorList['normal'];
                                p = new Pieces(carDataValueOverKey, n, lineColor);
                                ps.push(p);
                            }
                        }
                    } else {
                        carDataValueOverKey = 0;
                        if (n == carDataJsonLength - 1) {
                            lineColor = lineColorList['normal'];
                            p = new Pieces(carDataValueOverKey, n, lineColor);
                            ps.push(p);
                        }
                    }
                    xd.push(value.DateTime);
                    sd.push(value[carDataTypeSelected]);
                });
            var returnList = { 'xd': xd, 'sd': sd, 'ps': ps, 'markAreaDataList': markAreaDataList};
            return returnList;
        }

        //選取
        $("#carSDCardNumSelect").change(function () {
            var carSDCardNumSelected = $("#carSDCardNumSelect option:selected").text();
            //console.log(carSDCardNumSelected);
            $.post("../Home/getCarDriverList", { 'carSDCardNumSelected': carSDCardNumSelected }, function (carDriverList) {
                if (carDriverList == "") {
                    $("#carDriverSelect").empty();
                    $("#carDriverSelect").append("<option value=''>無</option>");
                }
                else {
                    carDriverList = JSON.parse(carDriverList);
                    $("#carDriverSelect").empty();
                    $("#carDriverSelect").append("<option value=''>請選擇</option>");
                    //$("#zxc").append(data);
                    for (i = 0; i < carDriverList.length; i++) {
                        $("#carDriverSelect").append("<option value='" + (i + 1) + "'>" + carDriverList[i].carDriver + "</option>");
                    }
                }
            });
        });

        $("#carDriverSelect").change(function () {
            var carSDCardNumSelected = $("#carSDCardNumSelect option:selected").text();
            var carDriverSelectd = $("#carDriverSelect option:selected").text();
            //console.log(carSDCardNumSelected);
            $.post("../Home/carStartDateTime", { 'carSDCardNumSelected': carSDCardNumSelected, 'carDriverSelectd': carDriverSelectd }, function (carStartDateTimeList) {
                if (carStartDateTimeList == "") {
                    $("#carStartDateSelect").empty();
                    $("#carStartDateSelect").append("<option value=''>無</option>");
                }
                else {
                    carStartDateTimeList = JSON.parse(carStartDateTimeList);
                    $("#carStartDateSelect").empty();
                    $("#carStartDateSelect").append("<option value=''>請選擇</option>");
                    //$("#zxc").append(data);
                    var carStartDateList = new Array();
                    for (i = 0; i < carStartDateTimeList.length; i++) {
                        var carStartDateTimeSplitList = carStartDateTimeList[i].carStartTime.split(' ');
                        if (carStartDateList.length == 0){
                            carStartDateList.push(carStartDateTimeSplitList[0]);
                        } else {
                            var check = 0;
                            for (j = 0; j < carStartDateList.length; j++) {
                                if (carStartDateList[j] == carStartDateTimeSplitList[0]) {
                                    check++;
                                }
                            }
                            if (check == 0){
                                carStartDateList.push(carStartDateTimeSplitList[0]);
                            }
                        }
                    }
                    $.each(carStartDateList, function (key, val) {
                        $("#carStartDateSelect").append("<option value='" + key + "'>" + val + "</option>");
                    });
                }
            });
        });

        $("#carStartDateSelect").change(function () {
            var carSDCardNumSelected = $("#carSDCardNumSelect option:selected").text();
            var carDriverSelectd = $("#carDriverSelect option:selected").text();
            var carStartDateSelected = $("#carStartDateSelect option:selected").text();
            //console.log(carStartDateSelected);
            $.post("../Home/carStartupTime", { 'carSDCardNumSelected': carSDCardNumSelected, 'carDriverSelectd': carDriverSelectd }, function (carStartDateTimeList) {
                if (carStartDateTimeList == "") {
                    $("#carStartupSelect").empty();
                    $("#carStartupSelect").append("<option value=''>無</option>");
                }
                else {
                    carStartDateTimeList = JSON.parse(carStartDateTimeList);
                    //console.log(carStartDateTimeList);
                    $("#carStartupSelect").empty();
                    $("#carStartupSelect").append("<option value=''>請選擇</option>");
                    for (i = 0; i < carStartDateTimeList.length; i++) {
                        var carStartDateTimeSplitList = carStartDateTimeList[i].carStartTime.split(' ');
                        if (carStartDateSelected == carStartDateTimeSplitList[0]) {
                            var carStartTimeSplitList = carStartDateTimeList[i].carStartTime.split('-');
                            var carEndTimeSplitList = carStartDateTimeList[i].carEndTime.split('-');
                            var carStartTime = carStartTimeSplitList[1] + '-' + carStartTimeSplitList[2] ;
                            var carEndTime = carEndTimeSplitList[1] + '-' + carEndTimeSplitList[2];
                            var compareTableName = carStartDateTimeList[i].compareTableName;
                            $("#carStartupSelect").append("<option value='" + compareTableName + "'>" + carStartTime + " ~ " + carEndTime + "</option>");
                        }
                    }
                }
            });
        });

        $("#clearSubmit").click(function (e) {
            //重整網頁
            location.reload(true);
        });        

        $("#requestSubmit").click(function (e) {
            var carSDCardNumSelected = $("#carSDCardNumSelect option:selected").text();
            var carStartupSelected = $("#carStartupSelect").val();
            var carDataTypeSelected = [];
            $("[name=carDataType]:checkbox:checked").each(function () {
                carDataTypeSelected.push($(this).val());
            });
            console.log(carDataTypeSelected);

            if (carStartupSelected == '') {
                //阻止送出
                //e.preventDefault();
                alert("請選取全部資料後再送出！！");
            } else {
                //myEChart.setOption(options);

                $.post("../Home/getCarStartupAllTime", { 'carStartupSelected': carStartupSelected }, function (carDataJson) {
                    carDataJson = JSON.parse(carDataJson);
                    var carDataJsonLength = carDataJson.length;
                    console.log(carDataJsonLength);
                    var timeList = [];
                    $.each(carDataJson,
                        function (n, value) {
                            timeList.push(value.DateTime);
                        });

                    $("#slider-range").slider({
                        range: true,
                        min: 0,
                        max: carDataJsonLength - 1,
                        values: [0, carDataJsonLength - 1],
                        slide: function (event, ui) {
                            $("#amount").text(timeList[ui.values[0]] + " ~ " + timeList[ui.values[1]]);
                        }
                    });
                    $("#amount").text(timeList[$("#slider-range").slider("values", 0)] +
                        " ~ " + timeList[$("#slider-range").slider("values", 1)]);

                    $("#CO2Compute").show();
                    $("#CO2ComputeResultDiv").hide();
                });

                if(carDataTypeSelected.length != 0){
                    $.post("../Home/getCarDataJson", { 'carStartupSelected': carStartupSelected, 'carDataTypeSelected': carDataTypeSelected }, function (carDataJson) {

                        carDataJson = JSON.parse(carDataJson);
                        console.log(carDataJson.length);
                        var carDataJsonLength = carDataJson.length - 2;
                        var carDataJsonMax = carDataJson.length - 1;
                        var carDataJsonMin = carDataJson.length - 2;
                        var carDataTimeStart = carDataJson[0].DateTime;
                        var carDataTimeEnd = carDataJson[carDataJsonLength - 3].DateTime;
                        var options;
                        $("#chartArea").empty();

                        for (var i = 0; i < carDataTypeSelected.length; i++) {
                            options = optionsDefinition();
                            $("#chartArea").append("<div id=" + carDataTypeSelected[i] + " style = 'width: 100%; height: 500px;' > < /div>");
                            var myEChart = echarts.init(document.getElementById(carDataTypeSelected[i]), 'shine');
                            myEChart.clear();
                            var xd = [], sd = [], ps = [];
                            var maxData, minData;
                            var setDataOfChartList;
                            if (carDataTypeSelected[i] == "SPD") {
                                options.title.text += "Speed";
                                maxData = carDataJson[carDataJsonMax].SPD;
                                minData = carDataJson[carDataJsonMin].SPD;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#SPDOver").val());
                            }
                            else if (carDataTypeSelected[i] == "engineSpeed") {
                                options.title.text += "Engine Speed";
                                maxData = carDataJson[carDataJsonMax].engineSpeed;
                                minData = carDataJson[carDataJsonMin].engineSpeed;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#engineSpeedOver").val());
                            }
                            else if (carDataTypeSelected[i] == "instantFuel") {
                                options.title.text += "Instant Fuel";
                                maxData = carDataJson[carDataJsonMax].instantFuel;
                                minData = carDataJson[carDataJsonMin].instantFuel;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#instantFuelOver").val());
                            }
                            else if (carDataTypeSelected[i] == "averageFuel") {
                                options.title.text += "Average Fuel";
                                maxData = carDataJson[carDataJsonMax].averageFuel;
                                minData = carDataJson[carDataJsonMin].averageFuel;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#averageFuelOver").val());
                            }
                            else if (carDataTypeSelected[i] == "ODO") {
                                options.title.text += "Odometer";
                                maxData = carDataJson[carDataJsonMax].ODO;
                                minData = carDataJson[carDataJsonMin].ODO;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#ODOOver").val());
                            }
                            else if (carDataTypeSelected[i] == "idleHours") {
                                options.title.text += "Idle Hours";
                                maxData = carDataJson[carDataJsonMax].idleHours;
                                minData = carDataJson[carDataJsonMin].idleHours;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#idleHoursOver").val());
                            }
                            else if (carDataTypeSelected[i] == "idleFuel") {
                                options.title.text += "Idle Fuel";
                                maxData = carDataJson[carDataJsonMax].idleFuel;
                                minData = carDataJson[carDataJsonMin].idleFuel;
                                setDataOfChartList = setDataOfChart(carDataJson, carDataJsonLength, carDataTypeSelected[i], carDataValueOver = $("#idleFuelOver").val());
                            }
                            xd = setDataOfChartList['xd'];
                            sd = setDataOfChartList['sd'];
                            options.yAxis.max = maxData;
                            options.yAxis.min = minData;
                            var s = new Series(carDataTypeSelected[i], xd, sd);
                            var xStart = carDataTimeStart;
                            var xEnd = carDataTimeEnd;
                            options.xAxis.data = s.xdata;
                            options.xAxis.start = xStart;
                            options.xAxis.end = xEnd;

                            ps = setDataOfChartList['ps'];
                            $.each(ps,
                                function (n, value) {
                                    options.visualMap.pieces.push(value);
                            });

                            markAreaDataList = setDataOfChartList['markAreaDataList'];
                            var markAreaData = [];
                            $.each(markAreaDataList,
                                function (n, value) {
                                    markAreaData.push([{xAxis: xd[value[0]]},{xAxis: xd[value[1]]}]);
                                });

                            options.legend.data.push(options.title.text);
                            options.series.push({
                                name: options.title.text,
                                type: 'line',
                                smooth: true,
                                data: s.seriesData,
                                markArea: {
                                    itemStyle: {
                                        color: 'rgba(255, 173, 177, 0.4)'
                                    },
                                    data: []
                                }
                            });
                            $.each(markAreaData,
                                function (n, value) {
                                    options.series[0].markArea.data.push(value);
                                });
                            
                            myEChart.setOption(options);
                        }
                    });
                }                
            }
        });

        $("#computeSubmit").click(function (e) {
            var carStartupSelected = $("#carStartupSelect").val();
            var startTimeKey = $("#slider-range").slider("values", 0);
            var endTimeKey = $("#slider-range").slider("values", 1);
            $.post("../Home/getCarStartupAllTime", { 'carStartupSelected': carStartupSelected }, function (carDataJson) {
                carDataJson = JSON.parse(carDataJson);
                var startPrimaryValue = carDataJson[startTimeKey].primaryValue;
                var endPrimaryValue = carDataJson[endTimeKey].primaryValue;
                var startTime = carDataJson[startTimeKey].DateTime;
                var endTime = carDataJson[endTimeKey].DateTime;

                $.post("../Home/getCO2ByCarStartup", { 'carStartupSelected': carStartupSelected, 'startPrimaryValue': startPrimaryValue, 'endPrimaryValue': endPrimaryValue }, function (carCalculatedDataJson) {
                    carCalculatedDataJson = JSON.parse(carCalculatedDataJson);
                    var co2 = carCalculatedDataJson["CO2"];
                    var mileage = carCalculatedDataJson["mileage"];
                    $("#CO2ComputeResultDiv").show();                    
                    $("#timeOfCO2").text("車輛啟動區間為： " + startTime + " ~ " + endTime);
                    $("#mileageOfCO2").text("啟動區間內行駛總里程為： " + mileage + " km");
                    $("#computeResultOfCO2").text("CO2: " + co2 + "kg");
                });
            });
        });
    });
</script>
